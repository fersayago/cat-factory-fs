/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["AppController_getHello"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all cats */
        get: operations["CatsController_findAll"];
        put?: never;
        /** Create a new cat */
        post: operations["CatsController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cats/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a cat by ID */
        get: operations["CatsController_findOne"];
        put?: never;
        post?: never;
        /** Delete a cat by ID */
        delete: operations["CatsController_remove"];
        options?: never;
        head?: never;
        /** Update a cat by ID */
        patch: operations["CatsController_update"];
        trace?: never;
    };
    "/breeds": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all breeds */
        get: operations["BreedsController_findAll"];
        put?: never;
        /** Create a new breed */
        post: operations["BreedsController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/breeds/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a breed by ID */
        get: operations["BreedsController_findOne"];
        put?: never;
        post?: never;
        /** Delete a breed by ID */
        delete: operations["BreedsController_remove"];
        options?: never;
        head?: never;
        /** Update a breed by ID */
        patch: operations["BreedsController_update"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CreateCatDto: {
            /**
             * @description The name of the cat
             * @example Luna
             */
            name: string;
            /**
             * @description The age of the cat
             * @example 2
             */
            age: number;
            /**
             * @description The gender of the cat
             * @example Female
             */
            gender: string;
            /**
             * @description The color of the cat
             * @example White
             */
            color: string;
            /**
             * @description The URL of the cat image
             * @example https://example.com/cat.jpg
             */
            imageUrl?: string;
            /**
             * @description The ID of the cat breed
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            breedId: string;
        };
        Breed: {
            /**
             * @description The ID of the breed
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            id: string;
            /**
             * @description The name of the breed
             * @example Persian
             */
            name: string;
            /**
             * @description The description of the breed
             * @example Persian cat is a breed of cat with a long, thick coat.
             */
            description: string;
            /**
             * @description The URL of the breed image
             * @example https://example.com/breed.jpg
             */
            imageUrl: Record<string, never>;
        };
        Cat: {
            /**
             * @description The ID of the cat
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            id: string;
            /**
             * @description The name of the cat
             * @example Luna
             */
            name: string;
            /**
             * @description The age of the cat
             * @example 2
             */
            age: number;
            /**
             * @description The gender of the cat
             * @example Female
             */
            gender: string;
            /**
             * @description The color of the cat
             * @example White
             */
            color: string;
            /**
             * @description The URL of the cat image
             * @example https://example.com/cat.jpg
             */
            imageUrl: Record<string, never>;
            /**
             * @description The ID of the breed of the cat
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            breedId: string;
            /** @description The breed of the cat */
            breed: components["schemas"]["Breed"];
        };
        UpdateCatDto: Record<string, never>;
        CreateBreedDto: {
            /**
             * @description The name of the breed
             * @example Persian
             */
            name: string;
            /**
             * @description The description of the breed
             * @example Persian is a breed of cat characterized by its long, thick fur and round face.
             */
            description: string;
            /**
             * @description The image URL of the breed
             * @example https://example.com/persian.jpg
             */
            imageUrl: string;
        };
        UpdateBreedDto: {
            /**
             * @description The name of the breed
             * @example Persian
             */
            name?: string;
            /**
             * @description The description of the breed
             * @example Persian is a breed of cat characterized by its long, thick fur and round face.
             */
            description?: string;
            /**
             * @description The image URL of the breed
             * @example https://example.com/persian.jpg
             */
            imageUrl?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    AppController_getHello: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CatsController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Return all cats. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Cat"][];
                };
            };
        };
    };
    CatsController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateCatDto"];
            };
        };
        responses: {
            /** @description The cat has been successfully created. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Cat"];
                };
            };
            /** @description Bad request. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CatsController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the cat */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Return the cat. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Cat"];
                };
            };
            /** @description Cat not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CatsController_remove: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the cat */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The cat has been successfully deleted. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Cat not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CatsController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the cat */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateCatDto"];
            };
        };
        responses: {
            /** @description The cat has been successfully updated. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Cat"];
                };
            };
            /** @description Cat not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BreedsController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Return all breeds. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Breed"][];
                };
            };
        };
    };
    BreedsController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateBreedDto"];
            };
        };
        responses: {
            /** @description The breed has been successfully created. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Breed"];
                };
            };
        };
    };
    BreedsController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Return the breed. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Breed"];
                };
            };
        };
    };
    BreedsController_remove: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The breed has been successfully deleted. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BreedsController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateBreedDto"];
            };
        };
        responses: {
            /** @description The breed has been successfully updated. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Breed"];
                };
            };
        };
    };
}
